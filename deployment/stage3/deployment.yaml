---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1.0.0"
  labels:
    app: eks-demo-app-deployment
  name: eks-demo-app-deployment
  namespace: eks-demo-app
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: eks-demo-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
      labels:
        app: eks-demo-app
    spec:
      containers:
        - name: kubernetes-eks-demo-app
          image: enschede/eks-demo-app:sprint1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 768Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 30
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30

